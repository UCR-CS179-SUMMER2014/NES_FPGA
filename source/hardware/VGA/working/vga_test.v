
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module VGA_TEST(

	//////////// CLOCK //////////
	CLOCK_50, 	// BANK 4
	CLOCK2_50, 	// BANK 7
	CLOCK3_50, 	// BANK 3A

	//////////// KEY (Active Low) //////////
	KEY,
	
	SW,
	
	//////////// VGA //////////
	VGA_B,
	VGA_BLANK_N,
	VGA_CLK,
	VGA_G,
	VGA_HS,
	VGA_R,
	VGA_SYNC_N,
	VGA_VS,

	//////////// Fan Control //////////
	FAN_CTRL 
);

//=======================================================
//  PARAMETER declarations
//=======================================================


//=======================================================
//  PORT declarations
//=======================================================

//////////// CLOCK //////////
input 		          		CLOCK_50;
input 		          		CLOCK2_50;
input 		          		CLOCK3_50;

//////////// KEY (Active Low) //////////
input 		     [3:0]		KEY;

input 			  [17:0]    SW;

//////////// VGA //////////
output		     [7:0]		VGA_B;
output		          		VGA_BLANK_N;
output		          		VGA_CLK;
output		     [7:0]		VGA_G;
output		          		VGA_HS;
output		     [7:0]		VGA_R;
output		          		VGA_SYNC_N;
output		          		VGA_VS;

//////////// Fan Control //////////
inout 		          		FAN_CTRL;


//=======================================================
//  REG/WIRE declarations
//=======================================================
wire       vidon_w;   // Data enable for RGB (when high)
wire [9:0] hc_w;		 // Horizontal Counter (AKA X position)
wire [9:0] vc_w;      // Vertical Counter (AKA Y Position)
wire       pclock_w;  // Pixel Clock [25Mhz for 640x480 res]

//=======================================================
//  Structural coding
//=======================================================
assign FAN_CTRL = 1'bz; // turn on FAN
assign VGA_BLANK_N = 1; // VGA reset? Disable.
assign VGA_SYNC_N = 0;  // Not sure what this is, keep active though.
assign VGA_CLK = pclock_w;

// Module/component connections
pixel_clock PCLOCK(		  // Altera PLL 
	.inclk0( CLOCK_50 ),   // 50Mhz input
	.c0( pclock_w)	        // Outputs 25Mhz clock
);

vga640x480 VGA(       // 640x480 signal generator
	.CLK( pclock_w ),  // Pixel Clock
	.CLR( ~KEY[0] ),   // Clear, aka Reset
	.HSYNC( VGA_HS ),  // Horizontal Sync
	.VSYNC( VGA_VS ),  // Vertical Sync
	.HC( hc_w ),       // Horizontal Counter/Position
	.VC( vc_w ),       // Vertical Counter/Position
	.VIDON( vidon_w )  // VIDON enable signal
);

vga_stripes COLOR_GEN( // Display generator
	.VIDON( vidon_w ),  // VIDON enable signa;
	.HC( hc_w ),        // Horizontal Counter/Position
	.VC( vc_w ),        // Vertical Counter/Position
	.R( VGA_R ),        // Red data
	.G( VGA_G ),        // Green data
	.B( VGA_B ),        // Blue data
	.SW( SW )           // Switches for color testing
);



endmodule
